Revisando... 

O retorno de fato sera em double, nesse procedimento double recebe double, logo ok! 

double = double + double || double = int + double || double = double + int (ok)
double = double - double || double = int - double || double = double - int (ok)
double = double * dobule || dobule = int * double || double = double * int (ok)
double = double / double || double = int / double || double = double / int (ok)

O retorno de fato sera em double, pois nesse caso o double converte o int para double [Ex.: (double num = 3) == (double num = 3.0)] 
double = int + int || double = int - int || double = int * int || double = int / int (ok)

(Obs.: qualquer operacao que tenha um double com - um int ou um double, o retorno sera em double)

Verificando o inverso...
Observa-se que o retorno nao sera em int, e sim em double! Nesse procedimento de um int receber um double acaba acarretando em um erro, de possibilidade de perda de precisao

int = double + double || int = int + double || int = double + int (error: possible loss of precision) required: int found: double 
int = double - double || int = int - double || int = double - int (error: possible loss of precision) required: int found: double 
int = double * dobule || int = int * double || int = double * int (error: possible loss of precision) required: int found: double
int = double / double || int = int / double || int = double / int (error: possible loss of precision) required: int found: double

O retorno de fato sera em int, nesse procedimento int recebe int, logo ok!
int = int + int || int = int - int || int = int * int || int = int / int (ok) required: int found: int

Eh istoTM
